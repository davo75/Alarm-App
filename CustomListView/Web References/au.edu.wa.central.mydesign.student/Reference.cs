//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace CustomListView.au.edu.wa.central.mydesign.student {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IService1", Namespace="http://tempuri.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ListAlarmsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewAlarmOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAlarmOperationCompleted;
        
        private System.Threading.SendOrPostCallback ToggleAlarmOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAlarmOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = "http://student.mydesign.central.wa.edu.au/2016CertIV_16/BedtimeWebServiceDP/Servi" +
                "ce1.svc";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ListAlarmsCompletedEventHandler ListAlarmsCompleted;
        
        /// <remarks/>
        public event CheckPasswordCompletedEventHandler CheckPasswordCompleted;
        
        /// <remarks/>
        public event AddNewAlarmCompletedEventHandler AddNewAlarmCompleted;
        
        /// <remarks/>
        public event UpdateAlarmCompletedEventHandler UpdateAlarmCompleted;
        
        /// <remarks/>
        public event ToggleAlarmCompletedEventHandler ToggleAlarmCompleted;
        
        /// <remarks/>
        public event DeleteAlarmCompletedEventHandler DeleteAlarmCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/ListAlarms", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ListAlarms(string username) {
            object[] results = this.Invoke("ListAlarms", new object[] {
                        username});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ListAlarmsAsync(string username) {
            this.ListAlarmsAsync(username, null);
        }
        
        /// <remarks/>
        public void ListAlarmsAsync(string username, object userState) {
            if ((this.ListAlarmsOperationCompleted == null)) {
                this.ListAlarmsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListAlarmsOperationCompleted);
            }
            this.InvokeAsync("ListAlarms", new object[] {
                        username}, this.ListAlarmsOperationCompleted, userState);
        }
        
        private void OnListAlarmsOperationCompleted(object arg) {
            if ((this.ListAlarmsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListAlarmsCompleted(this, new ListAlarmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/CheckPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckPassword(string username, string password) {
            object[] results = this.Invoke("CheckPassword", new object[] {
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CheckPasswordAsync(string username, string password) {
            this.CheckPasswordAsync(username, password, null);
        }
        
        /// <remarks/>
        public void CheckPasswordAsync(string username, string password, object userState) {
            if ((this.CheckPasswordOperationCompleted == null)) {
                this.CheckPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckPasswordOperationCompleted);
            }
            this.InvokeAsync("CheckPassword", new object[] {
                        username,
                        password}, this.CheckPasswordOperationCompleted, userState);
        }
        
        private void OnCheckPasswordOperationCompleted(object arg) {
            if ((this.CheckPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckPasswordCompleted(this, new CheckPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/AddNewAlarm", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddNewAlarm(string username, string alarmName, string alarmTime, string alarmActive, int alarmReminder, int[] days) {
            object[] results = this.Invoke("AddNewAlarm", new object[] {
                        username,
                        alarmName,
                        alarmTime,
                        alarmActive,
                        alarmReminder,
                        days});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddNewAlarmAsync(string username, string alarmName, string alarmTime, string alarmActive, int alarmReminder, int[] days) {
            this.AddNewAlarmAsync(username, alarmName, alarmTime, alarmActive, alarmReminder, days, null);
        }
        
        /// <remarks/>
        public void AddNewAlarmAsync(string username, string alarmName, string alarmTime, string alarmActive, int alarmReminder, int[] days, object userState) {
            if ((this.AddNewAlarmOperationCompleted == null)) {
                this.AddNewAlarmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewAlarmOperationCompleted);
            }
            this.InvokeAsync("AddNewAlarm", new object[] {
                        username,
                        alarmName,
                        alarmTime,
                        alarmActive,
                        alarmReminder,
                        days}, this.AddNewAlarmOperationCompleted, userState);
        }
        
        private void OnAddNewAlarmOperationCompleted(object arg) {
            if ((this.AddNewAlarmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewAlarmCompleted(this, new AddNewAlarmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/UpdateAlarm", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateAlarm(int alarmID, string alarmName, string alarmTime, string alarmActive, int alarmReminder, int[] days) {
            object[] results = this.Invoke("UpdateAlarm", new object[] {
                        alarmID,
                        alarmName,
                        alarmTime,
                        alarmActive,
                        alarmReminder,
                        days});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAlarmAsync(int alarmID, string alarmName, string alarmTime, string alarmActive, int alarmReminder, int[] days) {
            this.UpdateAlarmAsync(alarmID, alarmName, alarmTime, alarmActive, alarmReminder, days, null);
        }
        
        /// <remarks/>
        public void UpdateAlarmAsync(int alarmID, string alarmName, string alarmTime, string alarmActive, int alarmReminder, int[] days, object userState) {
            if ((this.UpdateAlarmOperationCompleted == null)) {
                this.UpdateAlarmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAlarmOperationCompleted);
            }
            this.InvokeAsync("UpdateAlarm", new object[] {
                        alarmID,
                        alarmName,
                        alarmTime,
                        alarmActive,
                        alarmReminder,
                        days}, this.UpdateAlarmOperationCompleted, userState);
        }
        
        private void OnUpdateAlarmOperationCompleted(object arg) {
            if ((this.UpdateAlarmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAlarmCompleted(this, new UpdateAlarmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/ToggleAlarm", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ToggleAlarm(int alarmID, string alarmState) {
            object[] results = this.Invoke("ToggleAlarm", new object[] {
                        alarmID,
                        alarmState});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ToggleAlarmAsync(int alarmID, string alarmState) {
            this.ToggleAlarmAsync(alarmID, alarmState, null);
        }
        
        /// <remarks/>
        public void ToggleAlarmAsync(int alarmID, string alarmState, object userState) {
            if ((this.ToggleAlarmOperationCompleted == null)) {
                this.ToggleAlarmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnToggleAlarmOperationCompleted);
            }
            this.InvokeAsync("ToggleAlarm", new object[] {
                        alarmID,
                        alarmState}, this.ToggleAlarmOperationCompleted, userState);
        }
        
        private void OnToggleAlarmOperationCompleted(object arg) {
            if ((this.ToggleAlarmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ToggleAlarmCompleted(this, new ToggleAlarmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/DeleteAlarm", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteAlarm(int alarmID) {
            object[] results = this.Invoke("DeleteAlarm", new object[] {
                        alarmID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAlarmAsync(int alarmID) {
            this.DeleteAlarmAsync(alarmID, null);
        }
        
        /// <remarks/>
        public void DeleteAlarmAsync(int alarmID, object userState) {
            if ((this.DeleteAlarmOperationCompleted == null)) {
                this.DeleteAlarmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAlarmOperationCompleted);
            }
            this.InvokeAsync("DeleteAlarm", new object[] {
                        alarmID}, this.DeleteAlarmOperationCompleted, userState);
        }
        
        private void OnDeleteAlarmOperationCompleted(object arg) {
            if ((this.DeleteAlarmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAlarmCompleted(this, new DeleteAlarmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ListAlarmsCompletedEventHandler(object sender, ListAlarmsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListAlarmsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListAlarmsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CheckPasswordCompletedEventHandler(object sender, CheckPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AddNewAlarmCompletedEventHandler(object sender, AddNewAlarmCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNewAlarmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNewAlarmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateAlarmCompletedEventHandler(object sender, UpdateAlarmCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAlarmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAlarmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ToggleAlarmCompletedEventHandler(object sender, ToggleAlarmCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ToggleAlarmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ToggleAlarmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteAlarmCompletedEventHandler(object sender, DeleteAlarmCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAlarmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAlarmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591